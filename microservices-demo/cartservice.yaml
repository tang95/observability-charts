apiVersion: apps/v1
kind: Deployment
metadata:
  name: cartservice
  labels:
    app.kubernetes.io/component: cartservice
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: cartservice
  template:
    metadata:
      labels:
        app.kubernetes.io/component: cartservice
    spec:
      serviceAccountName: cartservice
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: gcr.io/google-samples/microservices-demo/cartservice:v0.10.1
        ports:
        - containerPort: 7070
        env:
        - name: REDIS_ADDR
          value: "redis-cart:6379"
        resources:
          requests:
            cpu: 200m
            memory: 64Mi
          limits:
            cpu: 300m
            memory: 128Mi
        readinessProbe:
          initialDelaySeconds: 15
          grpc:
            port: 7070
        livenessProbe:
          initialDelaySeconds: 15
          periodSeconds: 10
          grpc:
            port: 7070
---
apiVersion: v1
kind: Service
metadata:
  name: cartservice
  labels:
    app.kubernetes.io/component: cartservice
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/component: cartservice
  ports:
  - name: grpc
    port: 7070
    targetPort: 7070
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cartservice
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-cart
  labels:
    app.kubernetes.io/component: redis-cart
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: redis-cart
  template:
    metadata:
      labels:
        app.kubernetes.io/component: redis-cart
    spec:
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: redis
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: redis:alpine
        ports:
        - containerPort: 6379
        readinessProbe:
          periodSeconds: 5
          tcpSocket:
            port: 6379
        livenessProbe:
          periodSeconds: 5
          tcpSocket:
            port: 6379
        volumeMounts:
        - mountPath: /data
          name: redis-data
        resources:
          limits:
            memory: 256Mi
            cpu: 125m
          requests:
            cpu: 70m
            memory: 200Mi
      volumes:
      - name: redis-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: redis-cart
  labels:
    app.kubernetes.io/component: redis-cart
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/component: redis-cart
  ports:
  - name: tcp-redis
    port: 6379
    targetPort: 6379

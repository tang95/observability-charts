kube-prometheus-stack:
  grafana:
    persistence:
      enabled: true
  prometheus:
    prometheusSpec:
      storageSpec:
        volumeClaimTemplate:
          spec:
            resources:
              requests:
                storage: 50Gi


tempo:
  persistence:
    enabled: true

loki:
  deploymentMode: SingleBinary
  loki:
    auth_enabled: false
    limits_config:
      allow_structured_metadata: true
    commonConfig:
      replication_factor: 1
    storage:
      type: 'filesystem'
    schemaConfig:
      configs:
        - from: "2024-01-01"
          store: tsdb
          index:
            prefix: loki_index_
            period: 24h
          object_store: filesystem # we're storing on filesystem so there's no real persistence here.
          schema: v13
  singleBinary:
    replicas: 1
  read:
    replicas: 0
  backend:
    replicas: 0
  write:
    replicas: 0

opentelemetry-collector:
  mode: daemonset
  image:
    repository: otel/opentelemetry-collector-contrib
  presets:
    logsCollection:
      enabled: true
      includeCollectorLogs: true
    kubernetesAttributes:
      enabled: true
      extractAllPodLabels: true
      extractAllPodAnnotations: true
    kubernetesEvents:
      enabled: true
  service:
    enabled: true

  alternateConfig:
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318

    processors:
      batch:
      memory_limiter:
        check_interval: 5s
        spike_limit_mib: 25
        limit_percentage: 80

    extensions:
      health_check:
        endpoint: ${env:MY_POD_IP}:13133
      pprof:

    exporters:
      debug: { }
      otlphttp/loki:
        endpoint: http://observability-loki-gateway.monitoring/otlp
      otlp/tempo:
        endpoint: observability-tempo.monitoring:4317
      prometheusremotewrite:
        endpoint: http://observability-kube-prometh-prometheus.monitoring:9090/api/v1/write

    service:
      extensions: [ health_check, pprof ]
      pipelines:
        logs:
          receivers: [ otlp ]
          processors: [ memory_limiter, batch ]
          exporters: [ otlphttp/loki, debug ]
        traces:
          receivers: [ otlp ]
          processors: [ memory_limiter, batch ]
          exporters: [ otlp/tempo, debug ]
        metrics:
          receivers: [ otlp ]
          processors: [ memory_limiter, batch ]
          exporters: [ prometheusremotewrite, debug ]